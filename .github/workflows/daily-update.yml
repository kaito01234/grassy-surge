name: daily update and build

on:
  workflow_dispatch:
  schedule:
    - cron: '33 * * * *'

env:
  USER_NAME: kaito01234
  USER_EMAIL: 43839796+kaito01234@users.noreply.github.com

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      should: ${{ steps.random_decision.outputs.should }}
    steps:
      - name: Random decision
        id: random_decision
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Manual trigger detected"
            SHOULD="true"
          else
            RANDAM_NUMBER=$RANDOM
            echo "Random number: $RANDAM_NUMBER"
            SHOULD=$([ $(($RANDAM_NUMBER % 360)) -eq 0 ] && echo "true" || echo "false")
          fi
          echo "should=$SHOULD" >> $GITHUB_OUTPUT
          echo "Decision: $SHOULD"

  update-and-build:
    needs: check
    if: needs.check.outputs.should == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Update site content
        run: |
          python update_site.py
        env:
          TZ: 'Asia/Tokyo'

      - name: Build static site
        run: |
          python build.py

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build

      - name: Create PR for changes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name ${USER_NAME}
          git config --global user.email ${USER_EMAIL}
          
          BRANCH_NAME="minor-fix-${{ github.run_number }}"
          
          # Function to cleanup branch
          cleanup_branch() {
            if git ls-remote --exit-code --heads origin $BRANCH_NAME; then
              git push origin --delete $BRANCH_NAME || true
            fi
          }
          
          # Check if branch exists and delete it
          cleanup_branch
          
          # Set trap to cleanup on error
          trap cleanup_branch ERR
          
          git checkout -b $BRANCH_NAME
          
          git add .
          git commit -m "minor fix"
          
          git push origin $BRANCH_NAME
          
          gh pr create \
            --title "minor fix" \
            --body "" \
            --base main \
            --head $BRANCH_NAME
          
          gh pr merge --auto --merge --delete-branch
